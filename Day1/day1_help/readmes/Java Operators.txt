Java Operators
 
Java Unary Operator
The Java unary operators require only one operand. Unary operators are used to perform various operations i.e.:

incrementing/decrementing a value by one
negating an expression
inverting the value of a boolean
eg :  
int x=10;  
int y=x++;
int z=++x;
sop(x+" "+y+" "+z);

int a=10;  
int b=10;  
sop(a++ + ++a);
sop(b++ + b++); 
  


Java Unary Operator Example: ~ and !
  
boolean c=true;  
boolean d=false;  
System.out.println(!c);  
System.out.println(!d);  


Java Arithmetic Operators

Java arithmatic operators are used to perform addition, subtraction, multiplication, and division. They act as basic mathematical operations.

  
int a=10;  
int b=5;  
System.out.println(a+b); 
System.out.println(a-b); 
System.out.println(a*b); 
System.out.println(a/b); 
System.out.println(a%b); 


Java Left Shift Operator
The Java left shift operator << is used to shift all of the bits in a value to the left side of a specified number of times.


System.out.println(10<<2);//10*2^2=10*4=40  
System.out.println(15<<3);//15*2^3=15*8=120 


Java Right Shift Operator
The Java right shift operator >> is used to move left operands value to right by the number of bits specified by the right operand.

 
System.out.println(10>>2);//10/2^2=10/4=2  
System.out.println(20>>2);//20/2^2=20/4=5  
System.out.println(20>>3);//20/2^3=20/8=2  


Java Shift Operator Example: >> vs >>>
refer to example --TestShiftOperators

Java AND Operator : Logical && and Bitwise &
The logical && operator doesn't check second condition if first condition is false. It checks second condition only if first one is true.

The bitwise & operator always checks both conditions whether first condition is true or false.

eg : 
int a=10;  
int b=5;  
int c=20;  
System.out.println(a<b&&a++<c); 
System.out.println(a);
System.out.println(a<b&a++<c);  
System.out.println(a);  


Similar is java OR operator : Logical || and Bitwise |
The logical || operator doesn't check second condition if first condition is true. It checks second condition only if first one is false.
-------------------------------------
Java Ternary Operator
Java Ternary operator is  replacement for if-then-else statement eg :

 
int a=2;  
int b=5;  
int min=(a<b)?a:b;  
System.out.println(min);  


Java Assignment Operator
eg :
int a=10;  
int b=20;  
a+=4;
a -= 5;

 
